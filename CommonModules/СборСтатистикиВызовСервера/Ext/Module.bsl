
#Область ПрограммныйИнтерфейс

// Удаляет все собранные показатели статистики
//
Процедура УдалитьВсеСобранныеПоказатели() Экспорт 

	Набор = РегистрыСведений.ПоказателиСтатистики.СоздатьНаборЗаписей();
	Набор.Записать(Истина);

КонецПроцедуры

// Создает запись статистических данных.
//
// Параметры:
//  Показатель	 - Строка - Имя показателя статистики.
//  Значение	 - Строка, Число, Булево - Значение показателя.
//
Процедура ЗаписатьПоказатель(Показатель, Значение = Неопределено) Экспорт

	Запись = РегистрыСведений.ПоказателиСтатистики.СоздатьМенеджерЗаписи();
	Запись.Показатель = Показатель;
	Запись.МоментВремени = ТекущаяУниверсальнаяДатаВМиллисекундах();

	Если Не Значение = Неопределено Тогда
		Запись.Значение = Значение;
	КонецЕсли;

	Запись.Записать();

КонецПроцедуры

// Начинает процедуру отправки данных статистики на сервер.
//
Процедура ОтправитьСтатистику() Экспорт

	ИмяФоновогоЗадания = "ОтправкаСтатистики";

	Отбор = Новый Структура();
	Отбор.Вставить("Наименование", ИмяФоновогоЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);

	МассивЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если МассивЗаданий.Количество() = 0 Тогда

		Параметры = Новый Массив();
		Параметры.Добавить(ТекущаяУниверсальнаяДатаВМиллисекундах());

		ФоновыеЗадания.Выполнить("СборСтатистикиВызовСервера.ОтправитьСтатистикуВФоне", 
			Параметры, Новый УникальныйИдентификатор, ИмяФоновогоЗадания);

	КонецЕсли;

КонецПроцедуры

// Отправляет показатели статистики на сервер в фоне.
//
// Параметры:
//  МоментВремени - Число - Граница выборки передаваемых данных.
//
Процедура ОтправитьСтатистикуВФоне(МоментВремени) Экспорт

	// Получаем данные показателей до указанной границы
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоказателиСтатистики.МоментВремени,
		|	ПоказателиСтатистики.Показатель,
		|	ПоказателиСтатистики.Значение
		|ИЗ
		|	РегистрСведений.ПоказателиСтатистики КАК ПоказателиСтатистики
		|ГДЕ
		|	ПоказателиСтатистики.МоментВремени <= &МоментВремени
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПоказателиСтатистики.МоментВремени
		|АВТОУПОРЯДОЧИВАНИЕ";

	// Отправляем каждую полученную пару Показатель-Значение.
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Попытка

			// Выполняем подключение к серверу и передачу данных.
			HTTPСоединение = Новый HTTPСоединение("unf-stat1c-gpt-msk.1c.ru", 80,,,, 120);
			ПутьНаСервере = 
				"/unf-stat1c/hs/analytics/sendstats/"
				+ СборСтатистикиКлиентСервер.ПолучитьИдентификаторПриложения() + "/"
				+ СборСтатистикиКлиентСервер.ПолучитьИдентификаторЭкземпляра() + "/"
				+ Выборка.Показатель;

			HTTPЗапрос = Новый HTTPЗапрос(ПутьНаСервере);
			Если ЗначениеЗаполнено(Выборка.Значение) Тогда
				HTTPЗапрос.УстановитьТелоИзСтроки(Выборка.Значение);
			КонецЕсли;

			Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);

			// Удаляем переданную запись из регистра.
			Запись = РегистрыСведений.ПоказателиСтатистики.СоздатьМенеджерЗаписи();

			Запись.Показатель = Выборка.Показатель;
			Запись.МоментВремени = Выборка.МоментВремени;

			Запись.Прочитать();

			Если Запись.Выбран() Тогда
				Запись.Удалить();
			КонецЕсли;

		Исключение

			ОбщееОписаниеОшибки = 
				НСтр("ru = 'Не удалось отправить данные статистики.'; en = 'Can't send statistics data.'");

			ТекстОшибки = 
				РаботаСоСтрокамиКлиентСервер.СформироватьПредставлениеОшибки(
					ОбщееОписаниеОшибки, ПодробноеПредставлениеОшибки(ОписаниеОшибки()));

			РаботаСПротоколомСобытийВызовСервера.ДобавитьОшибку(ТекстОшибки);

			// В случае ошибки, прерываем передачу, чтобы не было множественных запросов с ошибками.
			Прервать;

		КонецПопытки;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

