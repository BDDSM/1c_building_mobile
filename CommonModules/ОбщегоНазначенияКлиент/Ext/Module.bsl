
#Область ПрограммныйИнтерфейс

// Выполняет первоначальную настройку окружения системы.
//
// Параметры:
//  ЭтоЧистаяБаза	 - Булево - Признак того, что база пуста.
//  ТекущийРаздел	 - Строка - Текущий активный раздел.
//
Процедура ВыполнитьДействияПриЗапускеСистемы(ЭтоЧистаяБаза, ТекущийРаздел) Экспорт

	Если ЭтоЧистаяБаза 
		Или ОбновлениеИнформационнойБазыВызовСервера.НеобходимоВыполнитьОбновление() Тогда

		Если ЭтоЧистаяБаза Тогда
			СборСтатистикиВызовСервера.УдалитьВсеСобранныеПоказатели();
		КонецЕсли;

		СтраницыЧтоНового       = Новый Массив();
		ЕстьОшибкиПриОбновлении = Ложь;

		ОбновлениеИнформационнойБазыКлиент.ВыполнитьОбновлениеИнформационнойБазы(
			СтраницыЧтоНового, ЕстьОшибкиПриОбновлении);

		ОбновитьИнтерфейс();

		Если ЕстьОшибкиПриОбновлении Тогда

			// Наличие ошибок означает, что обновление не выполнено.
			// Будет открыта форма, на которой будет написано, что обновление данных 
			// не выполнено из-за ошибки.
			МоментыВремениОшибок = 
				ОбщегоНазначенияВызовСервера.ПолучитьОтметкиВремениНепоказанныеОшибок(Ложь);

			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("МоментыВремениСобытий", МоментыВремениОшибок);
			ПараметрыФормы.Вставить("КнопкаПовторить", Ложь);
			ПараметрыФормы.Вставить("Заголовок", 
				НСтр("ru = 'Ошибки обновления'; en = 'Update error'"));

			ОткрытьФорму("РегистрСведений.ПротоколСобытий.Форма.ФормаСпискаСобытий", 
				ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

		ИначеЕсли Не СтраницыЧтоНового.Количество() = 0 Тогда

			ОбработчикЗавершения = 
				Новый ОписаниеОповещения("ОбработатьПоказФормыЧтоНового", 
					ОбновлениеИнформационнойБазыКлиент, ОбновлениеИнформационнойБазыКлиент);

			Параметры = Новый Структура();
			Параметры.Вставить("Страницы", СтраницыЧтоНового);

			ОткрытьФорму("ОбщаяФорма.ЧтоНового", Параметры,,,,, ОбработчикЗавершения, 
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

		КонецЕсли;

	Иначе

		Если ЗначениеЗаполнено(ТекущийРаздел) Тогда

			Попытка
				ПерейтиПоНавигационнойСсылке(ТекущийРаздел);
			Исключение
				// Очистим текущий раздел, т.к. он все равно ошибочный
				ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты("ТекущийРаздел", "");
			КонецПопытки;

		КонецЕсли;

	КонецЕсли;

	ЛокальныеУведомленияКлиент.ПодключитьОбработкуДоставляемыхУведомлений();
	Оповестить("ВыполненЗапускСистемы");

КонецПроцедуры

// Обрабатывает результат ввода PIN-кода если он установлен
//
// Параметры:
//  Результат	 - Булево - Признак успешного ввода PIN-кода.
//  ДопПараметры - Структура, Неопределено - Доп. параметры передаваемые в процедуру.
//
Процедура ОбработчикЗакрытияФормыВводаPINКода(Результат, ДопПараметры) Экспорт

	Если Результат = Истина Тогда
		ВыполнитьДействияПриЗапускеСистемы(ДопПараметры.ЭтоЧистаяБаза, ДопПараметры.ТекущийРаздел);
	Иначе
		ЗавершитьРаботуСистемы(Ложь, Истина);
	КонецЕсли;

КонецПроцедуры

#Область ГлобальныеКоманды

// Выполняет открытие раздела "Списание денежных средств"
//
// Параметры:
//  ПараметрыВыполненияКоманды	 - ПараметрыВыполненияКоманды - Структура параметров общей команды.
//
Процедура ОткрытьРазделСписанияДенежныхСредств(ПараметрыВыполненияКоманды) Экспорт
	
	ИмяФормы = "Документ.СписаниеДенежныхСредств.Форма.ФормаСпискаТелефон";
	Если ЭтоУстройствоСБольшимЭкраном() Тогда
		ИмяФормы = "Документ.СписаниеДенежныхСредств.Форма.ФормаСпискаПланшет";
	Иначе
		ИмяФормы = "Документ.СписаниеДенежныхСредств.Форма.ФормаСпискаТелефон";
	КонецЕсли;

	ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты(
		"ТекущийРаздел", ПараметрыВыполненияКоманды.НавигационнаяСсылка);

	ОткрытьФорму(ИмяФормы,,
		ПараметрыВыполненияКоманды.Источник, 
		ПараметрыВыполненияКоманды.Уникальность, 
		ПараметрыВыполненияКоманды.Окно, 
		ПараметрыВыполненияКоманды.НавигационнаяСсылка);

КонецПроцедуры

#КонецОбласти

// Настраивает список выбора возможного срока окончания задачи или контроля.
//
// Параметры:
//  СписокВыбора		 - СписокЗначений - Настраиваемый список выбора.
//  ЗначениеЗаполнено	 - Булево - Признак, что значение в поле заполнено.
//
Процедура НастроитьСписокВыбораВариантовСрока(СписокВыбора, ЗначениеЗаполнено = Ложь) Экспорт

	ДатаСегодня       = Формат(ТекущаяДата()             , "ДФ='dd MMM'");
	ДатаЗавтра        = Формат(ТекущаяДата() + 24*60*60  , "ДФ='dd MMM'");
	ДатаПослезавтра   = Формат(ТекущаяДата() + 2*24*60*60, "ДФ='dd MMM'");
	ДатаЧерез2дня     = Формат(ТекущаяДата() + 3*24*60*60, "ДФ='dd MMM'");
	ДатаДоКонцаНедели = Формат(КонецНедели(ТекущаяДата()), "ДФ='dd MMM'");

	СписокВыбора.Очистить();

	СписокВыбора.Добавить("Сегодня" , 
		СтрШаблон(
			НСтр("ru = 'До конца дня, %1'; en = 'Until the end of day, %1'"), ДатаСегодня));

	СписокВыбора.Добавить("Завтра",
		СтрШаблон(
			НСтр("ru = 'Завтра, %1'; en = 'Tomorrow, %1'"), ДатаЗавтра));

	СписокВыбора.Добавить("Послезавтра", 
		СтрШаблон(
			НСтр("ru = 'Послезавтра, %1'; en = 'The day after tomorrow, %1'"), ДатаПослезавтра));

	СписокВыбора.Добавить("Через3дня",
		СтрШаблон(
			НСтр("ru = 'Через 3 дня, %1'; en = 'In 3 days, %1'"), ДатаЧерез2дня));

	СписокВыбора.Добавить("ДоКонцаНедели",
		СтрШаблон(
			НСтр("ru = 'До конца недели, %1'; en = 'Before the end of week, %1'"), ДатаДоКонцаНедели));

КонецПроцедуры

// Открывает переопределенную формы выбора даты.
//
// Параметры:
//  ФормаВладелец		 - Форма - Форма вызвавшая процедуру;
//  ИмяЭлемента			 - Строка - Имя элемента поля формы, из которого произошел вызов;
//  СтандартнаяОбработка - Булево - Флаг стандартной обработки;
//  Дата				 - Дата - Начальное значение даты передаваемое в форму;
//  СписокСобытий		 - Булево - Признак показа дополнительного списка событий в форме.
//
Процедура ОткрытьФормыВыбораДаты(
	ФормаВладелец, ИмяЭлемента, СтандартнаяОбработка, Дата, СписокСобытий = Ложь) Экспорт

	СтандартнаяОбработка = Ложь;

	ПараметрыОткрытия = Новый Структура();
	ПараметрыОткрытия.Вставить("ТекущаяДата", Дата);
	ПараметрыОткрытия.Вставить("Элемент", ИмяЭлемента);
	ПараметрыОткрытия.Вставить("СписокСобытий", СписокСобытий);

	ОткрытьФорму("ОбщаяФорма.ВыборДаты", ПараметрыОткрытия, ФормаВладелец,,,,,
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

#КонецОбласти

