
#Область ПрограммныйИнтерфейс

// Формирует список команд раздела Сервис в окне настроек
//
// Параметры:
//  ТаблицаКоманд	 - ТаблицаЗначений - Таблица команд в форме.
//   * Команда       - Строка - Идентификатор команды;
//   * Представление - Строка - Представление команды;
//   * Пояснение     - Строка - Краткая подсказка-пояснение для пользователя.
//
Процедура ЗаполнитьСписокКомандВРазделеСервис(ТаблицаКоманд) Экспорт

	ТаблицаКоманд.Очистить();

	// todo
	//Если Константы.ХранитьПисьмаВТечениеПериода.Получить() > 0
	//	Или Константы.ХранитьЗаписиКалендаряВТечениеПериода.Получить() > 0 Тогда

	//	Стр = ТаблицаКоманд.Добавить();
	//	Стр.Команда       = "ОчиститьСтарые";
	//	Стр.Представление = НСтр("ru = 'Очистить от старых данных'; en = 'Clear old data'");
	//	Стр.Пояснение     = НСтр("ru = 'Старые данные будут удалены  в соответствии с настройками времени хранения данных на данном устройстве.'; 
	//							|en = 'Old data will be removed according to settings of a storage time of data on this device.'");

	//КонецЕсли;

	Стр = ТаблицаКоманд.Добавить();
	Стр.Команда       = "УдалитьВсе";
	Стр.Представление = НСтр("ru = 'Удалить все данные'; en = 'Remove all data'");
	Стр.Пояснение     = НСтр("ru = 'Будет выполнено удаление всех загруженных данных. Клиент будет отключен от сервера. ';
							|en = 'All data will be removed. The client will be disconnected from the server.'");

	Стр = ТаблицаКоманд.Добавить();
	Стр.Команда       = "ОткрытьПротокол";
	Стр.Представление = НСтр("ru = 'Открыть протокол'; en = 'Open the event log'");
	Стр.Пояснение     = НСтр("ru = 'Будет открыт протокол событий работы мобильного клиента.'; 
							|en = 'Events protocol of the mobile client will be open.'");

КонецПроцедуры

// Формирует список команд о синхронизации в разделе почта
//
// Параметры:
//  ТаблицаКоманд	 - ТаблицаЗначений - Таблица команд в форме.
//   * Команда       - Строка - Идентификатор команды;
//   * Представление - Строка - Представление команды;
//   * Пояснение     - Строка - Краткая подсказка-пояснение для пользователя.
//
Процедура ЗаполнитьСписокКомандВРазделеПочта(ТаблицаКоманд) Экспорт

	ТаблицаКоманд.Очистить();

	Стр = ТаблицаКоманд.Добавить();
	Стр.Команда       = "СинхронизацияПапок";
	Стр.Представление = НСтр("ru = 'Синхронизация папок писем...'; en = 'Setting up folders'");
	Стр.Пояснение     = НСтр("ru = 'Настройка состава синхронизируемых папок писем.'; 
								|en = 'Control of structure of synchronizable folders.'");

КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////////////////////
// JSON <> Объект

Функция ОбъектИзJSON(СтрокаJSON, ИменаСвойствСоЗначениемДата = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(СтрокаJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИменаСвойствСоЗначениемДата = Неопределено Тогда
		ИменаСвойствСоЗначениемДата = Новый Массив();
	КонецЕсли;
		
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	
	Результат = ПрочитатьJSON(
		ЧтениеJSON, 
		, 
		ИменаСвойствСоЗначениемДата
	);
		
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

Функция ОбъектВJSON(Объект, ПереносСтрок = Истина) Экспорт
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(
		?(ПереносСтрок, ПереносСтрокJSON.Авто, ПереносСтрокJSON.Нет), 
		"  ");
	
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Объект);
	РезультатJSON = ЗаписьJSON.Закрыть();
	
	Возврат РезультатJSON;
	
КонецФункции
