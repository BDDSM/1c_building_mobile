
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	БольшойЭкран = ЭтоУстройствоСБольшимЭкраном();
	ЭтоЧистаяБаза = ОбщегоНазначенияВызовСервера.ЭтоЧистаяБаза();
	ИнициированаОчисткаБазы = ОбщегоНазначенияВызовСервера.ИнициированаОчисткаБазы();

	ЗаполнитьСписокРазделов();

	Если БольшойЭкран Тогда
		Элементы.РазделыКартинка.Высота = 4;
	КонецЕсли;

	Элементы.ГруппаРазделы.Видимость = Истина;
	Элементы.Создать.Видимость = Истина;
	
	Заголовок = НСтр("ru = '1C:Стройка'");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбработчикОжиданияУстановитьПодписьКДатеОбновления();
	ПодключитьОбработчикОжидания(
		"ОбработчикОжиданияУстановитьПодписьКДатеОбновления", 60, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОбновитьДатуСинхронизации" Тогда
		ОбменКлиент.УстановитьПодписьКДатеОбновления(
			Элементы, ОписаниеПоследнегоОбновления);

	ИначеЕсли ИмяСобытия = "НачатьСинхронизацию" Тогда

		ОтключитьОбработчикОжидания("ОбработчикОжиданияУстановитьПодписьКДатеОбновления");

		Параметр.Вставить("ДатаНачалаСинхронизации", ТекущаяДата());
		Параметр.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);

		ЗаданиеЗапущено = 
			ОбменВызовСервера.ЗапуститьСинхронизациюССерверомВФоне(
				Параметр, ФоновоеЗаданиеИдентификатор, ФоновоеЗаданиеАдресХранилища);

		Если ЗаданиеЗапущено Тогда
			ПодключитьОбработчикОжидания("ВыполнитьСинхронизациюПроверитьИсполнение", 0.2, Истина);
		КонецЕсли;

	ИначеЕсли ИмяСобытия = "ВыполняетсяСинхронизация" Тогда

		Если Не Элементы.ГруппаКнопкаОбновить.ТекущаяСтраница = Элементы.ВПроцессе Тогда
			Элементы.ГруппаКнопкаОбновить.ТекущаяСтраница = Элементы.ВПроцессе;
		КонецЕсли;

		Если Параметр.ОбновитьДатуСинхронизации Тогда
			Оповестить("ОбновитьДатуСинхронизации");
		КонецЕсли;

		Если Параметр.ЗаданиеВыполнено 
		 Или Не Параметр.СообщениеОбОшибке = Неопределено Тогда
			ОбменКлиент.ЗавершитьСинхронизацию(ЭтаФорма, СведенияОЗагруженныхДанных);
		Иначе
			ПодключитьОбработчикОжидания("ВыполнитьСинхронизациюПроверитьИсполнение", 2, Истина);
		КонецЕсли;

	ИначеЕсли ИмяСобытия = "СинхронизацияЗавершена" Тогда
		ЗаполнитьСписокРазделов();

		ПодключитьОбработчикОжидания("ОбработчикОжиданияУстановитьПодписьКДатеОбновления", 60, Ложь);

	ИначеЕсли ИмяСобытия = "ВыполненоПодключениеКЦентральнойБазе" Тогда

		ОбменВызовСервера.ВыполнитьДействияПослеПервогоПодключенияКСерверу();

		ЛокальныеУведомленияКлиент.ОбновитьЛокальныеУведомленияНаУстройстве();

		ОбменКлиент.УстановитьПодписьКДатеОбновления(
			Элементы, ОписаниеПоследнегоОбновления);

	ИначеЕсли ИмяСобытия = "ПовторитьСинхронизацию" Тогда
		ОбменКлиент.НачатьСинхронизацию(ЭтаФорма);		

	ИначеЕсли ИмяСобытия = "ПоявилисьНеотправленныеДанные" Тогда

		ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты(
			"ЕстьНеотправленныеДанные", Истина);

		ЛокальныеУведомленияКлиент.ОбновитьЛокальныеУведомленияНаУстройстве();

		ОбменКлиент.УстановитьПодписьКДатеОбновления(
			Элементы, ОписаниеПоследнегоОбновления);
			
		ЗаполнитьСписокРазделов();

	ИначеЕсли ИмяСобытия = "СоздатьУведомления" Тогда
		ЛокальныеУведомленияКлиент.ОбновитьЛокальныеУведомленияНаУстройстве();

	ИначеЕсли ИмяСобытия = "ОтправитьПисьмоВЦентральнуюБазу" Тогда
		ОтправитьОдиночноеПисьмо(Параметр);

	ИначеЕсли ИмяСобытия = "ВыполненоПолноеУдаление" Тогда
		ЗаполнитьСписокРазделов();
		ОбменКлиент.УстановитьПодписьКДатеОбновления(
			Элементы, ОписаниеПоследнегоОбновления);

	ИначеЕсли ИмяСобытия = "ВыполненЗапускСистемы" Тогда
		
		Если ИнициированаОчисткаБазы Тогда
			
			ОчисткаБазыДанныхКлиент.ПродолжитьОчисткуБазыДанных();	
			
		Иначе
			
			Если ЭтоЧистаяБаза Тогда
				ПодключитьОбработчикОжидания("ПоказатьФормуНастройкиПодключенияПриЗапуске", 1, Истина);
			Иначе

				Если ОпределитьНеобходимостьЗапускаФоновойСинхронизации() Тогда
					ОбменКлиент.НачатьСинхронизацию(ЭтаФорма);
				КонецЕсли;

			КонецЕсли;
		
		КонецЕсли
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПараметровЭкрана()

	ПараметрыЭкрана = ЭкранКлиентСервер.ПараметрыЭкрана();
	ШиринаЭкрана    = ПараметрыЭкрана[0].Ширина;
	ВысотаЭкрана    = ПараметрыЭкрана[0].Высота;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)

	ОткрытьФорму("ОбщаяФорма.СозданиеНового");

КонецПроцедуры

&НаКлиенте
Процедура Синхронизировать(Команда)

	ОбменКлиент.НачатьСинхронизацию(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыРазделы

&НаКлиенте
Процедура РазделыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если Элементы.Разделы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Раздел = Элементы.Разделы.ТекущиеДанные.ИмяРаздела;

	ПараметрыВыполненияКоманды = Новый Структура();
	ПараметрыВыполненияКоманды.Вставить("Источник", ЭтаФорма);
	ПараметрыВыполненияКоманды.Вставить("Уникальность",Новый УникальныйИдентификатор);
	ПараметрыВыполненияКоманды.Вставить("Окно", Неопределено);

	Если НРег(Раздел) = НРег("СписаниеДенежныхСредств") Тогда
		ИмяПоказателя = "РабочийСтол.ПерейтиВСписанияДенежныхСредств";
		ПараметрыВыполненияКоманды.Вставить("НавигационнаяСсылка", 
			"e1cib/navigationpoint/desktop/ОбщаяКоманда.ПерейтиВСписанияДенежныхСредств");
		ОбщегоНазначенияКлиент.ОткрытьРазделСписанияДенежныхСредств(ПараметрыВыполненияКоманды);
						
	КонецЕсли;

	СборСтатистикиВызовСервера.ЗаписатьПоказатель(ИмяПоказателя);

КонецПроцедуры

&НаКлиенте
Процедура РазделыОбработкаЗапросаОбновления()

	ОбменКлиент.НачатьСинхронизацию(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ДокументыНаРассмотрениеОбработкаЗапросаОбновления()

	ОбменКлиент.НачатьСинхронизацию(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииРабочийСтол

&НаСервере
Процедура ЗаполнитьСписокРазделов()

	Разделы.Очистить();

	СтрокаРаздела = Разделы.Добавить();
	СтрокаРаздела.Картинка   = БиблиотекаКартинок.РазделПочта;
	СтрокаРаздела.ИмяРаздела = "СписаниеДенежныхСредств";
	СтрокаРаздела.Описание   = ТекстыСообщенийКлиентСерверПовтИсп.ЗаголовокСписаниеДенежныхСредств();
			
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьОписаниеОВажныхСобытиях(Объекты, СтрокаРаздела, Описатель1, Описатель2)

	СтрочкаДанных = Объекты.Найти(СтрокаРаздела.ИмяРаздела);
	Если Не СтрочкаДанных = Неопределено Тогда

		СтрокаРаздела.ВажныеДанные = "";

		Если НЕ СтрочкаДанных.Показатель1 = 0 Тогда
			СтрокаРаздела.ВажныеДанные = СтрШаблон(
				Описатель1 + ": %1", СтрочкаДанных.Показатель1);
		КонецЕсли;

		Если НЕ СтрокаРаздела.ВажныеДанные = "" И НЕ СтрочкаДанных.Показатель2 = 0 Тогда
			СтрокаРаздела.ВажныеДанные = СтрокаРаздела.ВажныеДанные + Символы.ПС;
		КонецЕсли;

		Если НЕ СтрочкаДанных.Показатель2 = 0 Тогда
			СтрокаРаздела.ВажныеДанные = СтрокаРаздела.ВажныеДанные 
				+ СтрШаблон(
					Описатель2 + ": %1", СтрочкаДанных.Показатель2);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСинхронизация

&НаСервере
Функция ОпределитьНеобходимостьЗапускаФоновойСинхронизации()

	Если Не Константы.ИспользоватьФоновуюСинхронизацию.Получить() Тогда
		Возврат Ложь;
	КонецЕсли;

	#Если МобильноеПриложениеСервер Тогда

		ТипСоединения = ИнформацияОбИнтернетСоединении.ПолучитьТипСоединения();

		Если ТипСоединения = ТипИнтернетСоединения.НетСоединения Тогда
			Возврат Ложь;
		ИначеЕсли ТипСоединения = ТипИнтернетСоединения.СотовыеДанные Тогда
			Если Константы.ИспользоватьТолькоWiFi.Получить() Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;

	#КонецЕсли

	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ОбработчикОжиданияУстановитьПодписьКДатеОбновления()

	// В режиме согласования, если пользователь ввел комментарий - не обновляем дату синхронизации
	// т.к это приведет к очистке введенного текста.
	ОбменКлиент.УстановитьПодписьКДатеОбновления(
		Элементы, ОписаниеПоследнегоОбновления);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьФормуНастройкиПодключенияПриЗапуске()

	Если ЭтоЧистаяБаза Тогда
		ОбменКлиент.ПоказатьФормуНастройкиПодключения();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСинхронизациюНачало()

	ОтключитьОбработчикОжидания("ОбработчикОжиданияУстановитьПодписьКДатеОбновления");

	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("РежимСинхронизации", "ВыполнитьСинхронизацию");
	ПараметрыЗапуска.Вставить("ДатаНачалаСинхронизации", ТекущаяДата());
	ПараметрыЗапуска.Вставить("ТекущийРаздел", "Desktop");

	Оповестить("НачатьСинхронизацию", ПараметрыЗапуска);

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОдиночноеПисьмо(Письмо)

	ОтключитьОбработчикОжидания("ОбработчикОжиданияУстановитьПодписьКДатеОбновления");

	ПараметрыЗапуска = Новый Структура();
	ПараметрыЗапуска.Вставить("РежимСинхронизации", "ОтправитьОдиночноеПисьмо");
	ПараметрыЗапуска.Вставить("ДатаНачалаСинхронизации", ТекущаяДата());
	ПараметрыЗапуска.Вставить("Данные", Письмо);

	Оповестить("НачатьСинхронизацию", ПараметрыЗапуска);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСинхронизациюПроверитьИсполнение()

	Результат = 
		ОбменВызовСервера.ПроверитьСостояниеФоновойСинхронизации(
			ФоновоеЗаданиеИдентификатор, ФоновоеЗаданиеАдресХранилища, 
			ОписаниеПоследнегоОбновления);

	Оповестить("ВыполняетсяСинхронизация", Результат)

КонецПроцедуры

#КонецОбласти
