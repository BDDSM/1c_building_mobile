
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Переменная Текущий шаг может принимать следующие значения:
	// - ВводКода - при входе в систему или при первичной установке пароля;
	// - ВводПодтверждения - при вводе проверочного кода при установке пароля.
	ТекущийШаг = "ВводКода";

	Параметры.Свойство("Команда", Команда);

	НеудачныхПопытокЕсть = Константы.КоличествоНеудачныхПопытокВхода.Получить();
	ХешПароля = Константы.ХешПароля.Получить();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Элементы.ВариантыЗаголовка.ТекущаяСтраница = Элементы.ОбычныйВвод;
	НастроитьВидимостьПанелиСообщенияОбОшибке(НеудачныхПопытокЕсть);

	ОбработатьИзменениеВвода();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПервыйРядКнопка1Нажатие(Элемент)
	ОбработатьНажатиеКнопки("1");
КонецПроцедуры

&НаКлиенте
Процедура ПервыйРядКнопка2Нажатие(Элемент)
	ОбработатьНажатиеКнопки("2");
КонецПроцедуры

&НаКлиенте
Процедура ПервыйРядКнопка3Нажатие(Элемент)
	ОбработатьНажатиеКнопки("3");
КонецПроцедуры

&НаКлиенте
Процедура ВторойРядКнопка4Нажатие(Элемент)
	ОбработатьНажатиеКнопки("4");
КонецПроцедуры

&НаКлиенте
Процедура ВторойРядКнопка5Нажатие(Элемент)
	ОбработатьНажатиеКнопки("5");
КонецПроцедуры

&НаКлиенте
Процедура ВторойРядКнопка6Нажатие(Элемент)
	ОбработатьНажатиеКнопки("6");
КонецПроцедуры

&НаКлиенте
Процедура ТретийРядКнопка7Нажатие(Элемент)
	ОбработатьНажатиеКнопки("7");
КонецПроцедуры

&НаКлиенте
Процедура ТретийРядКнопка8Нажатие(Элемент)
	ОбработатьНажатиеКнопки("8");
КонецПроцедуры

&НаКлиенте
Процедура ТретийРядКнопка9Нажатие(Элемент)
	ОбработатьНажатиеКнопки("9");
КонецПроцедуры

&НаКлиенте
Процедура ЧетвертыйРядКнопка0Нажатие(Элемент)
	ОбработатьНажатиеКнопки("0");
КонецПроцедуры

&НаКлиенте
Процедура ЧетвертыйРядКнопкаУдалитьНажатие(Элемент)

	// Получаем текущую длину введенного кода
	ДлинаКода = СтрДлина(ВводимыйПароль);

	// Если длина равна 0 - стирать нечего
	Если ДлинаКода = 0 Тогда
		Возврат;
	КонецЕсли;

	// Уменьшаем пароль на один символ
	ВводимыйПароль = Лев(Пароль, ДлинаКода-1);

	// Отображаем изменения
	РезультатПроверки = ОбработатьИзменениеВвода();

	Если РезультатПроверки Тогда
		ПодключитьОбработчикОжидания("ЗакрытьФорму", 0.1, Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОтрисоватьЗнакиКода()

	// Выводим элементы введенных символов
	ДлинаКода = СтрДлина(ВводимыйПароль);
	Для Индекс = 1 По ДлинаКода Цикл
		Элементы["ГруппаСимволКода"+Индекс].ТекущаяСтраница = Элементы["ГруппаСимволКода"+Индекс+"Введен"];
	КонецЦикла;

	// Выводим элементы символов ждущих ввода
	Для Индекс = ДлинаКода+1 По 4 Цикл
		Элементы["ГруппаСимволКода"+Индекс].ТекущаяСтраница = Элементы["ГруппаСимволКода"+Индекс+"Пустой"];
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеКнопки(Цифра)

	// Увеличиваем пароль на введенный символ
	ВводимыйПароль = ВводимыйПароль + Цифра;

	// Отображаем изменения
	РезультатПроверки = ОбработатьИзменениеВвода();

	Если РезультатПроверки Тогда
		ПодключитьОбработчикОжидания("ЗакрытьФорму", 0.1, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ОбработатьИзменениеВвода()

	ОтрисоватьЗнакиКода();

	ЦифрВведено = СтрДлина(ВводимыйПароль);

	КомандаВыполнена = Ложь;

	// Переносим изменения в данные
	Если ТекущийШаг = "ВводКода" Тогда
		Пароль = ВводимыйПароль;

		// Если пользователь ввел 4 цифры и это режим настройки пароля
		Если Команда = "НастроитьПароль" И ЦифрВведено = 4 Тогда

			// Инициализируем переменные для повторного ввода
			ВводимыйПароль = "";
			ПарольПодтверждение = "";
			ТекущийШаг = "ВводПодтверждения";
			Элементы.ВариантыЗаголовка.ТекущаяСтраница = Элементы.ПовторПриУстановке;

			// Обновляем элементы
			ОтрисоватьЗнакиКода();

		Иначе

			Если ЦифрВведено = 4 Тогда

				ХешПароляПолученный = ПолучитьХешПароля(Пароль);

				// Если сохраненный хеш пароля равен полученному - разрешаем работать
				Если ХешПароляПолученный = ХешПароля Тогда

					// Сбрасываем счетчик ошибочных попыток ввода
					ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты(
						"КоличествоНеудачныхПопытокВхода", 0);

					// Добавляем запись в протокол
					РаботаСПротоколомСобытийВызовСервера.ДобавитьПредупреждение(
						НСтр("ru = 'Введен правильный пароль'; en = 'Password is correct'"));

					// Устанавливаем флаг успешного выполнения
					КомандаВыполнена = Истина;

					Возврат Истина;

				Иначе

					// Увеличиваем счетчики
					НеудачныхПопытокЕсть = НеудачныхПопытокЕсть + 1;

					// Сразу обновляем данные о количестве попыток 
					ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты(
						"КоличествоНеудачныхПопытокВхода", НеудачныхПопытокЕсть);

					// Добавляем запись в протокол об ошибке при входе
					РаботаСПротоколомСобытийВызовСервера.ДобавитьПредупреждение(
						НСтр("ru = 'Введен неверный пароль'; en = 'Password is wrong'"));

					// Очистим текущий введенный пароль
					ВводимыйПароль = "";

					// Обновляем элементы
					ОтрисоватьЗнакиКода();

					// Отображаем предупреждение с количеством попыток
					НастроитьВидимостьПанелиСообщенияОбОшибке(НеудачныхПопытокЕсть);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	Иначе
		// Обновляем подтверждение пароля
		ПарольПодтверждение = ВводимыйПароль;

		Если ЦифрВведено = 4 Тогда

			// Если пароль и подтверждение совпали
			Если (Пароль = ПарольПодтверждение) Тогда

				// Записываем хеш
				ОбщегоНазначенияВызовСервера.УстановитьЗначениеКонстанты(
					"ХешПароля", ПолучитьХешПароля(Пароль));
					
				РаботаСПротоколомСобытийВызовСервера.ДобавитьИнформацию(
					НСтр("ru = 'Установлен пароль'; en = 'Password is set'"));

				КомандаВыполнена = Истина;

				// Закрываем форму
				Возврат Истина;

			Иначе

				// Инициализируем переменные для повторного ввода
				ВводимыйПароль = "";
				Пароль = "";
				ПарольПодтверждение = "";
				ТекущийШаг = "ВводКода";

				// Обновляем картинку
				Элементы.ВариантыЗаголовка.ТекущаяСтраница = Элементы.ОбычныйВвод;
				ОтрисоватьЗнакиКода();

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Возврат Ложь;

КонецФункции

&НаСервере
Функция ПолучитьХешПароля(ВведенноеЗначение)

	Драйвер = Новый ХешированиеДанных(ХешФункция.CRC32);
	Драйвер.Добавить(ВведенноеЗначение);

	Возврат Драйвер.ХешСумма;

КонецФункции

&НаСервере
Процедура НастроитьВидимостьПанелиСообщенияОбОшибке(Ошибок)

	Если Ошибок = 0 Тогда
		Элементы.ЗаголовокОшибки.Видимость = Ложь;
	Иначе
		Элементы.ЗаголовокОшибки.Заголовок = СтрШаблон(
			НСтр("ru = 'Количество попыток: %1'; en = 'Error attempts: %1'"),
			Ошибок);
		Элементы.ЗаголовокОшибки.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()

	Закрыть(КомандаВыполнена);

КонецПроцедуры

#КонецОбласти

